# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Rust static link
on:
  push:
    branches: ["main", "v*"]
    # Also run on tag pushes, as the release.yml doesn't currently run tests
    tags: ["v*"]
  workflow_dispatch: {}
  pull_request:
    branches: ["main", "v*"]
    paths-ignore:
      - "docs/**"
      - "README.md"
      - "tests/README.md"

# Serialize workflow runs per ref
# Cancel any outdated, in-flight runs for refs other than 'main'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  CARGO_TERM_COLOR: always
jobs:
  build-spin:
    name: build spin
    runs-on: "ubuntu-latest"
    permissions:
      ## Allow this job to potentially cancel the running workflow (on failure)
      actions: write
    steps:
      - uses: actions/checkout@v3

      - name: setup dependencies
        uses: ./.github/actions/spin-ci-dependencies
        with:
          rust: true
          rust-wasm: true
          rust-cache: true

      - name: "setup tools"
        shell: bash
        run: sudo apt-get install -y --no-install-recommends asciidoctor zsh xz-utils liblz4-tool musl-tools brotli zstd

      - name: Use Cross
        shell: bash
        run: |
          cargo install cross
          echo "TARGET_FLAGS=--target x86_64-unknown-linux-musl" >> $GITHUB_ENV
          echo "TARGET_DIR=./target/x86_64-unknown-linux-musl" >> $GITHUB_ENV

      - name: Build release binary
        run: cross build --verbose --release --target x86_64-unknown-linux-musl --features openssl/vendored