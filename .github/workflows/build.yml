# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Rust
on:
  push:
    branches: [main]
    # Also run on tag pushes, as the release.yml doesn't currently run tests
    tags: ["v*"]
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "README.md"
env:
  CARGO_TERM_COLOR: always
jobs:
#   lint-rust:
#     name: Lint Rust
#     runs-on: "ubuntu-latest"
#     steps:
#       - uses: actions/checkout@v3

#       - name: setup dependencies
#         uses: ./.github/actions/spin-ci-dependencies
#         with:
#           rust: true
#           rust-cache: true

#       - name: Cargo Format
#         run:
#           BUILD_SPIN_EXAMPLES=0 cargo fmt --all -- --check

#       - name: Cargo Clippy
#         run:
#           BUILD_SPIN_EXAMPLES=0 cargo clippy --workspace --all-targets --all-features -- -D warnings

#   ## This is separated out to remove e2e-tests dependency on windows/mac builds
#   build-rust-ubuntu:
#     name: Build Spin Ubuntu
#     runs-on: ubuntu-latest
#     needs: [lint-rust]
#     steps:
#       - uses: actions/checkout@v3

#       - name: setup dependencies
#         uses: ./.github/actions/spin-ci-dependencies
#         with:
#           rust: true
#           rust-wasm: true
#           rust-cache: true

#       - name: Cargo Build
#         run: cargo build --workspace --release --all-targets --all-features --features openssl/vendored
#         env:
#           CARGO_INCREMENTAL: 0

#       - name: "Archive executable artifact"
#         uses: actions/upload-artifact@v3
#         with:
#           name: spin-ubuntu-latest
#           path: target/release/spin

#   build-rust:
#     name: Build Spin
#     runs-on: ${{ matrix.os }}
#     needs: [lint-rust]
#     strategy:
#       matrix:
#         os: [windows-latest, macos-latest]
#     steps:
#       - uses: actions/checkout@v3

#       - name: setup dependencies
#         uses: ./.github/actions/spin-ci-dependencies
#         with:
#           rust: true
#           rust-wasm: true
#           rust-cache: true

#       - name: Cargo Build
#         run: cargo build --workspace --release --all-targets --all-features
#         env:
#           CARGO_INCREMENTAL: 0

#       - name: "Archive executable artifact"
#         uses: actions/upload-artifact@v3
#         with:
#           name: spin-${{ matrix.os }}
#           path: target/release/spin${{ matrix.os == 'windows-latest' && '.exe' || '' }}


#   test-rust:
#     name: Test Spin SDK - Rust
#     runs-on: ${{ matrix.os }}
#     needs: [lint-rust]
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#     steps:
#       - uses: actions/checkout@v3

#       - name: setup dependencies
#         uses: ./.github/actions/spin-ci-dependencies
#         with:
#           rust: true
#           rust-wasm: true
#           rust-cache: true
#           bindle: true
#           nomad: true
#           hippo: true

#       - name: Cargo Unit Tests
#         run: |
#           make test-unit
#         env:
#           CARGO_INCREMENTAL: 0

#       - name: Cargo E2E Tests
#         run: |
#           make test-e2e
#         env:
#           RUST_LOG: spin=trace
#           CARGO_INCREMENTAL: 0

#   test-go:
#     name: Test Spin SDK - Go
#     runs-on: ubuntu-latest
#     needs: build-rust-ubuntu
#     steps:
#       - uses: actions/checkout@v3

#       - name: Retrieve saved Spin Binary
#         uses: actions/download-artifact@v3
#         with:
#           name: spin-ubuntu-latest
#           path: target/debug/

#       - name: Fix Spin Binary permissions
#         run: |
#           ls -lah target/
#           ls -lah target/debug
#           chmod +x target/debug/spin

#       - name: setup dependencies
#         uses: ./.github/actions/spin-ci-dependencies
#         with:
#           bindle: true
#           golang: true
#           tinygo: true
#           wasmtime: true

#       - name: "Test Go SDK"
#         run: make test-sdk-go

  detect-changes:
    name: Detect changes to e2e-tests Dockerfile
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.filter.outputs.jobs }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            e2e-tests-dockerfile:
              - 'e2e-tests.Dockerfile'

  e2e-tests:
    runs-on: ubuntu-22.04
    # needs: build-rust-ubuntu
    steps:
      - uses: actions/checkout@v3

      # - name: Retrieve saved Spin Binary
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: spin-ubuntu-latest
      #     path: target/release/

      - name: Build e2e tests image
        env:
          DOCKERFILE_CHANGED: ${{ needs.changes.outputs.e2e-tests-dockerfile }}
        run: |
          ## build docker image if e2e-tests.Dockerfile has changed or ghcr.io/fermyon/spin-e2e-tests:latest does not exist
          docker manifest inspect ghcr.io/rajatjindal/gotest-to-html:v0.0.22 >/dev/null 2>&1 || exit_code=$?
          echo "exit code is $exit_code"
          echo "DOCKERFILE_CHANGED is ${DOCKERFILE_CHANGED}"
          if [[ $exit_code -ne 0 ]] || [[ "${DOCKERFILE_CHANGED}" == "true" ]]; then
            # docker build -t ghcr.io/fermyon/spin-e2e-tests:latest -f e2e-tests.Dockerfile .
            echo "building docker image"
          fi

      # - name: Run e2e tests
      #   run: |
      #     chmod +x `pwd`/target/release/spin
      #     docker compose -f e2e-tests-docker-compose.yml run e2e-tests
