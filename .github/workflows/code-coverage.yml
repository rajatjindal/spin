name: Code coverage
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  # build-rust:
  #   name: Build Spin
  #   runs-on: ${{ matrix.config.os }}
  #   if: ${{ github.repository_owner == 'fermyon' }} || ${{ github.event_name == 'workflow_dispatch' }}
  #   strategy:
  #     matrix:
  #       config:
  #         - {
  #             os: "ubuntu-latest",
  #             extension: "",
  #             # We have this enabled for releases, so we should test it.
  #             extraArgs: "--features openssl/vendored",
  #           }
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: 1.66
  #         default: true

  #     - name: "Install Wasm Rust target"
  #       run: rustup target add wasm32-wasi

  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         shared-key: "${{ runner.os }}-full-${{ hashFiles('./Cargo.lock') }}"

  #     - name: Cargo Build
  #       run: cargo build --workspace --all-targets --all-features ${{ matrix.config.extraArgs }}

  #     - name: "Archive executable artifact"
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: spin-${{ matrix.config.os }}
  #         path: target/debug/spin${{ matrix.config.extension }}

  code-coverage:
    name: Run code coverage
    runs-on: ${{ matrix.config.os }}
    if: ${{ github.repository_owner == 'fermyon' }} || ${{ github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        config:
          - {
              os: "ubuntu-latest",
              extension: "",
              # We have this enabled for releases, so we should test it.
              extraArgs: "--features openssl/vendored",
              bindleUrl: "https://bindle.blob.core.windows.net/releases/bindle-v0.8.0-linux-amd64.tar.gz",
              bindleBinary: "bindle-server",
              pathInBindleArchive: "bindle-server",
              nomadUrl: "https://releases.hashicorp.com/nomad/1.3.1/nomad_1.3.1_linux_amd64.zip",
              nomadBinary: "nomad",
              pathInNomadArchive: "nomad",
              hippoUrl: "https://github.com/deislabs/hippo/releases/download/v0.19.0/hippo-server-linux-x64.tar.gz",
              spin: "https://github.com/fermyon/spin/releases/download/v0.7.1/spin-v0.7.1-linux-amd64.tar.gz",
            }
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.66
          default: true

      - name: "Install Wasm Rust target"
        run: rustup target add wasm32-wasi

      - name: Install bindle
        uses: engineerd/configurator@v0.0.8
        with:
          name: ${{ matrix.config.bindleBinary }}
          url: ${{ matrix.config.bindleUrl }}
          pathInArchive: ${{ matrix.config.pathInBindleArchive }}

      - name: Install spin
        uses: engineerd/configurator@v0.0.8
        with:
          name: spin
          url: ${{ matrix.config.spin }}
          pathInArchive: spin

      - name: Install nomad
        uses: engineerd/configurator@v0.0.8
        with:
          name: ${{ matrix.config.nomadBinary }}
          url: ${{ matrix.config.nomadUrl }}
          pathInArchive: ${{ matrix.config.pathInNomadArchive }}

      - name: Install hippo
        run: |
          curl -L ${{ matrix.config.hippoUrl }} -o hippo-server.tar.gz
          mkdir hippo-server-output
          tar xz -C hippo-server-output -f hippo-server.tar.gz
          cp -r hippo-server-output/**/* ~/configurator/bin
          chmod +x ~/configurator/bin/Hippo.Web

      - name: Install cargo-tarpaulin binary crate
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.19.1
          use-tool-cache: true

      - name: Cargo Tarpaulin
        run: cargo tarpaulin --follow-exec --skip-clean -t 6000 --out xml --features openssl/vendored,default,e2e-tests
        env:
          RUST_LOG: spin=trace

      # Only attempt to upload to codecov.io if the repo owner is fermyon.
      # This allows forks to run code coverage manually, without needing
      # to have a codecov token for uploading.
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'fermyon' }}
        with:
          fail_ci_if_error: true
          verbose: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          name: code-coverage-report
          path: cobertura.xml
